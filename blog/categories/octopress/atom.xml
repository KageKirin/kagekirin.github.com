<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Code Alchemist]]></title>
  <link href="http://kagekirin.github.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://kagekirin.github.com/"/>
  <updated>2013-11-20T01:53:39+09:00</updated>
  <id>http://kagekirin.github.com/</id>
  <author>
    <name><![CDATA[Chris Helmich]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jekyll plugin for Graphviz]]></title>
    <link href="http://kagekirin.github.com/blog/2012/04/04/jekyll-plugin-for-graphviz/"/>
    <updated>2012-04-04T23:28:00+09:00</updated>
    <id>http://kagekirin.github.com/blog/2012/04/04/jekyll-plugin-for-graphviz</id>
    <content type="html"><![CDATA[<p>I stumbled over this small Jekyll plugin for Octopress
which allows to use <a href="http://www.graphviz.org/">graphviz</a> notation inside a blog post.<br/>
<a href="http://dryman.github.com/blog/2012/04/04/jekyll-graphviz-plugin/">original link</a></p>

<p>Obviously, you need to have graphviz installed on your generating system.
(<code>port install graphviz</code> should do it if you have MacPorts installed, or well, <a href="http://mxcl.github.com/homebrew/">Brew</a>).</p>

<p>Here&rsquo;s a short test</p>

<pre><code>{\% graphviz \%}
  digraph G {
  compound=true;
  subgraph cluster0 {
    a -&gt; b;
    a -&gt; c;
    b -&gt; d;
    c -&gt; d;
  }
  subgraph cluster1 {
    e -&gt; g;
    e -&gt; f;
  }
  b -&gt; f [lhead=cluster1];
  d -&gt; e;
  c -&gt; g [ltail=cluster0, lhead=cluster1];
  c -&gt; e [ltail=cluster0];
  d -&gt; h;
}
{\% endgraphviz \%}
</code></pre>

<p>should give the diagram below:</p>

<p>{% graphviz %}
digraph G {
  compound=true;
  subgraph cluster0 {
  a &ndash;> b;
  a &ndash;> c;
  b &ndash;> d;
  c &ndash;> d;
  }
  subgraph cluster1 {
  e &ndash;> g;
  e &ndash;> f;
  }
  b &ndash;> f [lhead=cluster1];
  d &ndash;> e;
  c &ndash;> g [ltail=cluster0, lhead=cluster1];
  c &ndash;> e [ltail=cluster0];
  d &ndash;> h;
}
{% endgraphviz %}</p>

<p>Now, where I see great use for this plugin (and probably gonna use it in the future), is to generate UML diagrams to describe a given architecture, flow charts to describe data or work flows, or schemata describing some algorithm.</p>

<p>You probably should install the plugin from
<a href="https://github.com/dryman/dryman.github.com/blob/src/plugins/graphviz_block.rb">its repository</a>
or wait until it has been integrated into the mainline Octopress branch.</p>

<p>And for the hardcore coders, it should be possible to add it to Mulberry/Toura as well, as it&rsquo;s based on Jekyll as well.
(Although I see hardly any need to generate diagrams for an app. Then again, there might be a need for it).</p>

<p>EDIT: I just saw a perfect application for graphs in an app that I&rsquo;m working on, namely, a diagram for tournaments or championships, to show how the candidates (fighters in this case) advance from round to round.</p>

<p>/C</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing with Octopress -- Custom Asides]]></title>
    <link href="http://kagekirin.github.com/blog/2012/02/22/playing-with-octopress-custom-asides/"/>
    <updated>2012-02-22T01:31:00+09:00</updated>
    <id>http://kagekirin.github.com/blog/2012/02/22/playing-with-octopress-custom-asides</id>
    <content type="html"><![CDATA[<p>If you&rsquo;ve followed this blog, you might have noticed a couple of changes in the last days.
In fact, I&rsquo;ve been playing around with customizing Octopress and added a couple of custom asides.</p>

<h2>Coderwall</h2>

<p>I wanted to add my Coderwall badges in the asides. A bit of googling lead me to <a href="http://tzangms.com">another Octopress blog</a>, which was using <a href="http://mizzy.org/blog/2012/01/13/coderwall-badges-on-the-sidebar/">Mizzy</a>&rsquo;s code to display the badges. From there, it was pretty easy to extract the Javascript code from the page source. I only found the original author&rsquo;s page later today, but by then, I had already a working version.</p>

<p>As customization on the original code, I added the img@alt and img@title attributes to be generated from Coderwall&rsquo;s JSON response data. This gives a nice addition for hovering over the badge to get its description, and an alternative description for non-graphic browsers.</p>

<p>{% include_code ../../_includes/asides/coderwall.html %}</p>

<h2>Xbox Live</h2>

<p>The second custom aside I created follows the implementation as described on the official Xbox site, which is using an iframe to embed the card. I don&rsquo;t really like the iframe to embed an external page, but this implementation was small and function, which is the essential.</p>

<p>{% include_code ../../_includes/asides/xboxlive.html %}</p>

<h2>Configuration</h2>

<p>The coderwall_user and xboxlive_user need to be specified in _config.yml.</p>

<h2>More gamercard services</h2>

<p>Given you have a website that generates nice gamercards (there are ton of thems), you can use the above code to include your custom gamercard as an aside.</p>

<p><strong> tl;dr </strong>
Creating asides is super easy with Jekyll/Octopress. And I&rsquo;ll probably create a few more for fun.</p>

<p>/C</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rediscovering Web Development in 2012]]></title>
    <link href="http://kagekirin.github.com/blog/2012/02/19/rediscovering-web-development-2012/"/>
    <updated>2012-02-19T22:49:00+09:00</updated>
    <id>http://kagekirin.github.com/blog/2012/02/19/rediscovering-web-development-2012</id>
    <content type="html"><![CDATA[<p>I&rsquo;m not a web developer by birth.
I&rsquo;ve done some web development as cheap jobs when I was a student. As such, I knew the vital parts of PHP, some bits of Javascript and of course the HTML4 DOM and the basics of CSS. Just enough to pound out a (-cheap-looking- programmer art) webpage, with MySQL for database support.
That was between 1999 and 2006. Then I graduated.</p>

<p>Not that web development was boring, but since the web bubble just exploded when I was in my 2nd year at University, I had some prejudices to web development being a good career path. Plus, game programming was something I wanted to do since my childhood, and graphics programming was something I studied, I chose the path of a graphics programmer, and not the one of a web developper.</p>

<p>Hence, I didn&rsquo;t follow the evolutions that closely.
Well, I saw XHTML coming during the XML boom &mdash; put everything into XML, and if you need the data in a different format, add some XML layer on top of it &mdash; and going, I saw HTML5 arriving to make the web better (and played Apple&rsquo;s &ldquo;Checkers&rdquo; demo countless of times), saw the rise of CSS, to the point of CSS3 (I liked the part where it killed the old tablosaurs), and WebGL arriving (after seeing VRML and X3D dying their all-to-merited death), all that without really taking part in those changes.</p>

<p>And now, in 2012, I finally decided to relaunch my blog in a different form (I had a self-hosted WordPress blog, but I let it die without updates, neither in the form of WP patches, nor in content) and found this Octopress thingy I am using, which looks to me that it&rsquo;s using a great bunch of new technologies, that didn&rsquo;t ring any bells until now: SASS, Liquid, Jekyll, jQuery, etc.</p>

<p>So I&rsquo;m entering totally new terrain, which is both terrifying (in the amount of new stuff to learn) and interesting (in the amount of new stuff to discover) at the same time, and I&rsquo;ll be blogging about my discoverings here from time to time.</p>

<p>Besides trying to configure this site to look a bit &ldquo;different&rdquo; from the vanilla Octopress theme, I have one other motivation to go all this way:
I was asked by some very good friends if I could produce some small iOS app for their organization. Hence I&rsquo;ve been spending some time to look into possible solutions to produce an app (possibly not limited to iOS) in the short amount of time I have besides work.</p>

<p>I already knew PhoneGap from some earlier &ldquo;research&rdquo;, but haven&rsquo;t come to use it yet.
But then I found Octopress, and Jekyll as a static page generator as its base, and this idea kinda stuck with me: If I&rsquo;m going to put out a little app that&rsquo;s going to contain little more than text, I could use those technologies to pound out an app pretty quickly. Modifying the styles could even be done by my friends, and since I could easily host its sources on github, it would make the updates pretty easy.</p>

<p>Looking closer at my requirements, I found out that there&rsquo;s already been someone with a similar idea, which has resulted in a project called Mulberry.</p>

<p>Mulberry is based on PhoneGap and Jekyll and allows to generate the &ldquo;scaffolding&rdquo; of an app for iOS and Android. I&rsquo;ve been toying with for a couplke of hours today, but it looks pretty promising.</p>

<p><strong>tl;dr</strong> Web development has gone a long way, and I&rsquo;m looking forward to learn more about all these new technologies.
Actually, it&rsquo;s awesome to see all the new evolutions of web technologies, and even to be using them.</p>

<p>On this matter of thought, if anyone knows how to put in a WebGL-powered tag cloud for the categories of my posts, I&rsquo;d like to hear about it.</p>

<p>/C</p>
]]></content>
  </entry>
  
</feed>
